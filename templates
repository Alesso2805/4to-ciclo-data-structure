#include <iostream>
using namespace std;

template < typename T > T suma (T a, T b)
{
  return a + b;
}

int
main ()
{
  double x = 10.5, y = 20.75;
  cout << "\nEntero: " << suma < int >(x, y);
  cout << "\nFloat: " << suma < float >(x, y);
  cout << "\nDouble: " << suma < double >(x, y);

  return 0;
}




#include <iostream>
using namespace std;
template<typename T>

class Cuadrado {
    T lado;
    public:
    Cuadrado(T lado);
    ~Cuadrado();
    T Area();
};

//IMPLEMENTAR EL CONSTRUCOTR, DESTRUCTOR, √ÅREA

template<typename T>
T Cuadrado<T>::Cuadrado(T lado){
    this->lado = lado;
}

template<typename T>
Cuadrado<T>::~Cuadrado(){}

template<typename T>
T Cuadrado<T>::Area(){
    return lado *lado;
}

int main(){
    //INSTANCIA
    Cuadrado<double>objCuadrado(12.5);
    double rs=objCuadrado.Area();
    cout <<"Area: "<< rs;
}
